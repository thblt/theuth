[{"/home/thblt/Documents/Code/theuth/theuth-web/src/index.js":"1","/home/thblt/Documents/Code/theuth/theuth-web/src/App.js":"2","/home/thblt/Documents/Code/theuth/theuth-web/src/reportWebVitals.js":"3"},{"size":500,"mtime":1608482846413,"results":"4","hashOfConfig":"5"},{"size":11751,"mtime":1608586694088,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1608482846413,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"13ux6kb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/thblt/Documents/Code/theuth/theuth-web/src/index.js",[],["16","17"],"/home/thblt/Documents/Code/theuth/theuth-web/src/App.js",["18","19","20","21","22","23","24"],"import \"./App.scss\";\nimport {\n  Badge,\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Jumbotron,\n  ListGroup,\n  Nav,\n  NavDropdown,\n  Navbar,\n  Row,\n} from \"react-bootstrap\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst queryClient = new QueryClient();\n\nfunction Home() {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>\n          Le manuel du&nbsp;peuple, par&nbsp;le&nbsp;peuple,\n          pour&nbsp;le&nbsp;peuple.\n        </h1>\n        <p class=\"lead\">\n          Philosopher.fr est un recueil de textes de philosophie libre, gratuit\n          et collaboratif, organisé selon les programme du cycle terminal de\n          l'enseignement secondaire français.{\" \"}\n          <LinkContainer to=\"/meta\">\n            <a>En savoir plus…</a>\n          </LinkContainer>\n        </p>\n        <p>\n          <LinkContainer to=\"/texte/aleatoire\">\n            <Button variant=\"success\" size=\"lg\">\n              Voir un texte au hasard\n            </Button>\n          </LinkContainer>\n          {\" ou \"}\n          <LinkContainer to=\"/texte/nouveau\">\n            <Button class=\"float-right\" variant=\"success\" size=\"lg\">\n              Proposer un nouveau texte\n            </Button>\n          </LinkContainer>\n        </p>\n      </Jumbotron>\n\n      <Row>\n        <Col xs={3}>\n          <Card bg=\"light\">\n            <Card.Header>\n              <strong>Notions</strong>\n            </Card.Header>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item action>\n                L'art <Badge variant=\"primary\">321</Badge>\n              </ListGroup.Item>\n              <ListGroup.Item action>Le bonheur</ListGroup.Item>\n              <ListGroup.Item active action>\n                La conscience\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n          <br />\n\n          <Card bg=\"light\">\n            <Card.Header>\n              <strong>Repères</strong>\n            </Card.Header>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item action>Absolu/relatif</ListGroup.Item>\n              <ListGroup.Item action>Abstrait/concret</ListGroup.Item>\n              <ListGroup.Item active action>\n                En acte/en puissance\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n\n          <br />\n\n          <Card bg=\"light\">\n            <Card.Header>\n              <strong>HLP</strong>\n            </Card.Header>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item action>\n                <strong>I. Les pouvoirs de la parole</strong>\n              </ListGroup.Item>\n              <ListGroup.Item action>L'art de la parole</ListGroup.Item>\n              <ListGroup.Item active action>\n                La conscience\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n\n        <Col>\n          {\" \"}\n          <ListGroup>\n            <ListGroup.Item action>\n              <strong>« Nous ne voyons pas les choses même… »</strong>{\" \"}\n              <Badge pill variant=\"primary\">\n                L'art\n              </Badge>{\" \"}\n              <Badge pill variant=\"primary\">\n                Le langage\n              </Badge>\n              <br />\n              <span class=\"text-muted\">\n                Dans ce texte, Bergson indique que toute représentation est par\n                nature destructrice de singularité. Il y a quelque chose\n                d'unique dans l'expérience\n              </span>\n            </ListGroup.Item>\n            <ListGroup.Item action>Le bonheur</ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction NumberList(props) {\n  const items = props.items;\n  const listItems = items.map((item) => (\n    <li>\n      <a\n        href={\"/notions/\" + item.slug}\n        title={\"Tous les textes sur \" + item.le_name}\n      >\n        {item.le_name}\n      </a>\n    </li>\n  ));\n  return <ul>{listItems}</ul>;\n}\n\nfunction TestPage() {\n  const { isLoading, error, data } = useQuery(\"repoData\", () =>\n    fetch(\"http://localhost:3000/categories/philosophie/\").then((res) =>\n      res.json()\n    )\n  );\n  if (isLoading) return \"Loading…\";\n\n  if (error) return \"An error has occurred: \" + error.message;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <NumberList items={data} />\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nfunction NavBar() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>\n          <strong>Philosopher.fr</strong>\n        </Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nfunction NewText() {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Proposer un texte</h1>\n        <p class=\"lead\">\n          Cette interface vous permet d’ajouter de nouveaux textes à\n          Philosopher.fr. Avant d'ajouter un texte, prenez un moment pour\n          vérifier qu'il n'est pas déjà présent dans la base.\n        </p>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group as={Row} controlId=\"newTextForm.title\">\n          <Form.Label column sm={2}>\n            Un titre pour l'extrait\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control size=\"lg\" type=\"text\" placeholder=\"Titre\" />\n            <Form.Text className=\"text-muted\">\n              Le titre sert à présenter ce texte en quelques mots. Il doit être\n              bref et précis. <em>Les animaux ne sont que des machines</em> ou{\" \"}\n              <em>Tout ce qu’ordonne le souverain est juste</em> sont de bons\n              titres.\n            </Form.Text>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"newTextForm.summary\">\n          <Form.Label column sm={2}>\n            {\" \"}\n            Quelques mots pour présenter cet extrait{\" \"}\n          </Form.Label>{\" \"}\n          <Col sm={10}>\n            {\" \"}\n            <Form.Control as=\"textarea\" rows={4} placeholder=\"Présentation\" />\n            <Form.Text className=\"text-muted\">\n              {\" \"}\n              Quelques mots plus détaillés pour présenter cet extrait, son\n              intérêt particulier, son contexte ou ce qui fait sa singularité.\n              Apparaît dans les résultats de recherche et en « chapô » dans\n              l'écran d'affichage.{\" \"}\n            </Form.Text>{\" \"}\n          </Col>{\" \"}\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"newTextForm.body\">\n          <Form.Label column sm={2}>\n            L'extrait lui-même\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control as=\"textarea\" rows={12} placeholder=\"Contenu\" />\n            <Form.Text className=\"text-muted\">\n              Mettez uniquement le texte, tel qu’il apparaît dans l’original.\n              Pour faire un saut de paragraphe, insérez deux sauts de ligne.\n            </Form.Text>\n          </Col>\n        </Form.Group>\n\n        <h2>Auteur et source</h2>\n        <Row>\n          <Col>\n            <Card bg=\"light\">\n              <Card.Header>\n                <b>Auteur</b>\n              </Card.Header>\n              <Card.Body>\n                <Form.Group controlId=\"newTextForm.author\">\n                  <Form.Label>Auteur</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    placeholder=\"Sélectionnez…\"\n                    required\n                  >\n                    <option value=\"\" />\n                    <option value=\"33\">Aristote</option>\n                    <option>Platon</option>\n                    <option>Heidegger</option>\n                  </Form.Control>\n                  <Form.Text>\n                    <a href=\"#\">L’auteur n’est pas dans la liste</a>\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"newTextForm.pseudo-author\">\n                  <Form.Label>\n                    Certains (rares) textes présentent la doctrine d'un autre\n                    auteur que le leur. Si c'est le cas, sélectionnez cet autre\n                    auteur ci-dessous: votre textes apparaîtra avec les textes\n                    de ce dernier dans la recherche.\n                  </Form.Label>\n                  <Form.Control as=\"select\">\n                    <option>(Ne s'applique pas)</option>{\" \"}\n                  </Form.Control>\n                  <Form.Text>Voyez ici pour un exemple.</Form.Text>\n                </Form.Group>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card bg=\"light\">\n              <Card.Header>\n                <b>Origine du texte</b>\n              </Card.Header>\n              <Card.Body>\n                <Form.Group controlId=\"newTextForm.source\">\n                  <Form.Label>\n                    Livre/article dont est extrait le texte\n                  </Form.Label>\n                  <Form.Control as=\"select\">\n                    <option>Traité du ciel</option>\n                  </Form.Control>\n                  <Form.Text>\n                    <a href=\"#\">L’œuvre n’est pas dans la liste</a>\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"newTextForm.edition\">\n                  <Form.Label>\n                    Indications sur la traduction ou l'édition\n                  </Form.Label>\n                  <Form.Control type=\"text\"></Form.Control>\n                  <Form.Text className=\"text-muted\">\n                    Vous pouvez indiquer ici la traduction citée, ou l'édition\n                    particulière dont vous tirez l'extrait.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"newTextForm.page\">\n                  <Form.Label>\n                    Numéro de page, de section, de paragraphe…\n                  </Form.Label>\n                  <Form.Control type=\"text\" />\n                  <Form.Text className=\"text-muted\">\n                    Vous pouvez indiquer tout ce qui peut être utile à localiser\n                    cet extrait précis.  Par exemple: chapitre 2, section XV; Ak\n                    XVII, 37; 814b-c…\n                  </Form.Text>\n                </Form.Group>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        <hr />\n\n        <hr />\n      </Form>\n    </div>\n  );\n}\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>404</h1>\n      <LinkContainer to=\"/\">\n        <a>Retour à l’accueil</a>\n      </LinkContainer>\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <QueryClientProvider client={queryClient}>\n        <NavBar />\n        <br />\n        <Container>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/texte/nouveau\">\n              <NewText />\n            </Route>\n            <Route path=\"/notions\">\n              <TestPage />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Container>\n      </QueryClientProvider>\n    </Router>\n  );\n}\n","/home/thblt/Documents/Code/theuth/theuth-web/src/reportWebVitals.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":9,"column":3,"nodeType":"31","messageId":"32","endLine":9,"endColumn":14},{"ruleId":"29","severity":1,"message":"33","line":12,"column":3,"nodeType":"31","messageId":"32","endLine":12,"endColumn":6},{"ruleId":"29","severity":1,"message":"34","line":13,"column":3,"nodeType":"31","messageId":"32","endLine":13,"endColumn":14},{"ruleId":"35","severity":1,"message":"36","line":36,"column":13,"nodeType":"37","endLine":36,"endColumn":16},{"ruleId":"35","severity":1,"message":"38","line":267,"column":21,"nodeType":"37","endLine":267,"endColumn":33},{"ruleId":"35","severity":1,"message":"38","line":301,"column":21,"nodeType":"37","endLine":301,"endColumn":33},{"ruleId":"35","severity":1,"message":"36","line":345,"column":9,"nodeType":"37","endLine":345,"endColumn":12},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]